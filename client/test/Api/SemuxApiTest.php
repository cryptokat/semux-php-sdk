<?php
/**
 * SemuxApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Semux\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Semux API
 *
 * Semux is an experimental high-performance blockchain platform that powers decentralized application.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Semux\Client;

use Semux\Client\Api\SemuxApi;
use \Semux\Client\Configuration;
use \Semux\Client\ApiException;
use \Semux\Client\ObjectSerializer;

/**
 * SemuxApiTest Class Doc Comment
 *
 * @category Class
 * @package  Semux\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SemuxApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var SemuxApi
     */
    private $api;

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
        $config = new Configuration();
        $config->setHost("http://0.0.0.0:5171/v2.0.0")->setUsername("user")->setPassword("pass");
        $this->api = new SemuxApi(new \GuzzleHttp\Client(), $config);
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addNode
     *
     * Add node.
     */
    public function testAddNode()
    {
    }

    /**
     * Test case for addToBlacklist
     *
     * Add to blacklist.
     */
    public function testAddToBlacklist()
    {
    }

    /**
     * Test case for addToWhitelist
     *
     * Add to whitelist.
     */
    public function testAddToWhitelist()
    {
    }

    /**
     * Test case for broadcastRawTransaction
     *
     * Broadcast a raw transaction.
     */
    public function testBroadcastRawTransaction()
    {
    }

    /**
     * Test case for composeRawTransaction
     *
     * Compose an unsigned raw transaction.
     */
    public function testComposeRawTransaction()
    {
    }

    /**
     * Test case for createAccount
     *
     * Create account.
     */
    public function testCreateAccount()
    {
    }

    /**
     * Test case for getAccount
     *
     * Get account.
     */
    public function testGetAccount()
    {
    }

    /**
     * Test case for getAccountTransactions
     *
     * Get account transactions.
     */
    public function testGetAccountTransactions()
    {
    }

    /**
     * Test case for getBlockByHash
     *
     * Get block by hash.
     */
    public function testGetBlockByHash()
    {
    }

    /**
     * Test case for getBlockByNumber
     *
     * Get block by number.
     */
    public function testGetBlockByNumber()
    {
    }

    /**
     * Test case for getDelegate
     *
     * Get a delegate.
     */
    public function testGetDelegate()
    {
    }

    /**
     * Test case for getDelegates
     *
     * Get all delegates.
     */
    public function testGetDelegates()
    {
    }

    /**
     * Test case for getInfo
     *
     * Get info.
     */
    public function testGetInfo()
    {
        $response = $this->api->getInfo();
        $this->assertTrue($response->getSuccess());
    }

    /**
     * Test case for getLatestBlock
     *
     * Get latest block.
     */
    public function testGetLatestBlock()
    {
    }

    /**
     * Test case for getLatestBlockNumber
     *
     * Get latest block number.
     */
    public function testGetLatestBlockNumber()
    {
    }

    /**
     * Test case for getPeers
     *
     * Get peers.
     */
    public function testGetPeers()
    {
    }

    /**
     * Test case for getPendingTransactions
     *
     * Get pending transactions.
     */
    public function testGetPendingTransactions()
    {
    }

    /**
     * Test case for getRoot
     *
     * Get root.
     */
    public function testGetRoot()
    {
    }

    /**
     * Test case for getTransaction
     *
     * Get transaction.
     */
    public function testGetTransaction()
    {
    }

    /**
     * Test case for getTransactionLimits
     *
     * Get transaction limits.
     */
    public function testGetTransactionLimits()
    {
    }

    /**
     * Test case for getValidators
     *
     * Get validators.
     */
    public function testGetValidators()
    {
    }

    /**
     * Test case for getVote
     *
     * Get vote.
     */
    public function testGetVote()
    {
    }

    /**
     * Test case for getVotes
     *
     * Get votes.
     */
    public function testGetVotes()
    {
    }

    /**
     * Test case for listAccounts
     *
     * List accounts.
     */
    public function testListAccounts()
    {
    }

    /**
     * Test case for registerDelegate
     *
     * Register delegate.
     */
    public function testRegisterDelegate()
    {
    }

    /**
     * Test case for signMessage
     *
     * Sign a message.
     */
    public function testSignMessage()
    {
    }

    /**
     * Test case for signRawTransaction
     *
     * Sign an unsigned raw transaction.
     */
    public function testSignRawTransaction()
    {
    }

    /**
     * Test case for transfer
     *
     * Transfer coins.
     */
    public function testTransfer()
    {
    }

    /**
     * Test case for unvote
     *
     * Unvote.
     */
    public function testUnvote()
    {
    }

    /**
     * Test case for verifyMessage
     *
     * Verify a message.
     */
    public function testVerifyMessage()
    {
    }

    /**
     * Test case for vote
     *
     * Vote.
     */
    public function testVote()
    {
    }
}
